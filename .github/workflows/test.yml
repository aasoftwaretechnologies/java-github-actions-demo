name: Upload Docker Image from S3 to ECR

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
  S3_IMAGE_KEY: ${{ secrets.S3_IMAGE_KEY }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  upload-to-ecr:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4


      - name: Build with Maven
        run: mvn clean package

      - name: List target directory contents
        run: ls -l target/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload JAR to S3
        run: aws s3 cp target/*.jar s3://$S3_BUCKET/ 


      - name: Download Docker Image from S3
        run: |
          echo "Downloading image from S3..."
          aws s3 cp s3://$S3_BUCKET/$S3_IMAGE_KEY image.tar

      - name: Load Docker Image
        run: |
          echo "Loading image into Docker..."
          docker load -i image.tar

      - name: Tag Docker Image for ECR
        run: |
          echo "Tagging image for ECR..."
          IMAGE_ID=$(docker images --format "{{.Repository}}:{{.Tag}}" | head -n 1)
          docker tag $IMAGE_ID $ECR_REPOSITORY:latest

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Image to ECR
        run: |
          echo "Pushing image to ECR..."
          docker push $ECR_REPOS_
