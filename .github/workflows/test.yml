name: Build JAR, Upload to S3, and Push Docker Image to ECR

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
  JAR_FILE_NAME: java-github-actions-demo-1.0-SNAPSHOT.jar
  JAR_S3_KEY: app/java-github-actions-demo-1.0-SNAPSHOT.jar
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  IMAGE_TAG: latest

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build JAR with Maven
        run: mvn clean package

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload JAR to S3
        run: |
          aws s3 cp target/${{ env.JAR_FILE_NAME }} s3://$S3_BUCKET/$JAR_S3_KEY

  download-and-push-ecr:
    needs: build-and-upload
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download JAR from S3
        run: |
          aws s3 cp s3://$S3_BUCKET/$JAR_S3_KEY app.jar

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Image to ECR
        run: |
          docker push $ECR_REPOSITORY:$IMAGE_TAG
